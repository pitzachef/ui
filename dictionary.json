{
  "services": [
    "Workspace",
    "Players",
    "Lighting",
    "ReplicatedStorage",
    "ServerStorage",
    "HttpService",
    "RunService",
    "SoundService",
    "MarketplaceService",
    "UserInputService",
    "Teams",
    "TextService",
    "TeleportService",
    "TweenService",
    "AdService",
    "AnalyticsService",
    "AssetService",
    "BadgeService",
    "ChangeHistoryService",
    "Chat",
    "CollectionService",
    "ContentProvider",
    "ContextActionService",
    "CookiesService",
    "CoreGui",
    "Debris",
    "DebuggerManager",
    "DraftsService",
    "DraggerService",
    "FilteredSelection",
    "FriendService",
    "GamePassService",
    "GamepadService",
    "Geometry",
    "GroupService",
    "GuiService",
    "HSRDataContentProvider",
    "HapticService",
    "HttpRbxApiService",
    "InsertService",
    "Instance",
    "JointsService",
    "LanguageService",
    "LocalizationService",
    "LogService",
    "MemStorageService",
    "MeshContentProvider",
    "NotificationService",
    "PermissionsService",
    "PhysicsService",
    "PluginDebugService",
    "PluginGuiService",
    "PointsService",
    "PolicyService",
    "ProcessInstancePhysicsService",
    "ReplicatedFirst",
    "ScriptContext",
    "Selection",
    "ServerScriptService",
    "ServerStorage",
    "SolidModelContentProvider",
    "StarterGui",
    "StarterPack",
    "StarterPlayer",
    "Stats",
    "StudioService",
    "TestService",
    "TouchInputService",
    "VRService",
    "VirtualInputManager",
    "Visit",
    "DataStoreService",
    "GroupService",
    "ScriptEditorService"
  ],
  "classes": {
    "Instance": {
      "properties": {
        "Name": "string",
        "Parent": "Instance",
        "ClassName": "string",
        "Archivable": "boolean"
      },
      "methods": {
        "FindFirstChild": "Instance",
        "GetChildren": "Instance[]",
        "Destroy": "void",
        "Clone": "Instance",
        "GetAttribute": "any",
        "SetAttribute": "void"
      }
    },
    "Part": {
      "inherits": "Instance",
      "properties": {
        "Position": "Vector3",
        "Size": "Vector3",
        "Color": "Color3",
        "Material": "Enum.Material",
        "Anchored": "boolean",
        "Shape": "Enum.PartType"
      }
    },
    "Player": {
      "inherits": "Instance",
      "properties": {
        "UserId": "number",
        "Character": "Model",
        "Backpack": "Backpack",
        "Team": "Team"
      }
    },
    "Humanoid": {
      "inherits": "Instance",
      "properties": {
        "WalkSpeed": "number",
        "JumpPower": "number",
        "Health": "number"
      }
    },
    "GuiObject": {
      "inherits": "Instance",
      "properties": {
        "Size": "UDim2",
        "Position": "UDim2",
        "Visible": "boolean"
      }
    }
  },
  "enums": {
    "Material": [
      "Plastic",
      "Wood",
      "Slate",
      "Concrete",
      "Metal",
      "Glass",
      "Granite"
    ],
    "Font": [
      "Legacy",
      "Arial",
      "ArialBold",
      "SourceSans",
      "SourceSansBold",
      "SourceSansLight",
      "SourceSansItalic",
      "Bodoni",
      "Garamond",
      "Cartoon",
      "Code",
      "Highway",
      "SciFi",
      "Arcade",
      "Fantasy",
      "Antique",
      "SourceSansSemibold",
      "Gotham",
      "GothamMedium",
      "GothamBold",
      "GothamBlack",
      "AmaticSC",
      "Bangers",
      "Creepster",
      "DenkOne",
      "Fondamento",
      "FredokaOne",
      "GrenzeGotisch"
    ],
    "AssetType": [
      "Image",
      "TShirt",
      "Audio",
      "Mesh",
      "Lua",
      "Hat",
      "Place",
      "Model",
      "Shirt",
      "Pants",
      "Decal",
      "Head",
      "Face",
      "Gear",
      "Badge",
      "Animation",
      "Torso",
      "RightArm",
      "LeftArm",
      "LeftLeg",
      "RightLeg",
      "Package",
      "GamePass",
      "Plugin",
      "MeshPart",
      "HairAccessory",
      "FaceAccessory",
      "NeckAccessory",
      "ShoulderAccessory",
      "FrontAccessory",
      "BackAccessory"
    ],
    "CoreGuiType": [
      "PlayerList",
      "Health",
      "Backpack",
      "Chat",
      "All",
      "EmotesMenu",
      "SelfView",
      "Captures"
    ],
    "UserInputType": [
      "MouseButton1",
      "MouseButton2",
      "MouseButton3",
      "Touch",
      "Keyboard",
      "Gamepad1",
      "Gamepad2",
      "Gamepad3",
      "Gamepad4"
    ]
  },
  "types": {
    "Vector3": {
      "constructor": "new(x: number, y: number, z: number)",
      "methods": ["Lerp", "Dot", "Magnitude"]
    },
    "CFrame": {
      "constructor": "new(x: number, y: number, z: number)",
      "methods": ["Inverse", "Lerp"]
    },
    "UDim2": {
      "constructor": "new(xScale: number, xOffset: number, yScale: number, yOffset: number)",
      "methods": []
    },
    "Color3": {
      "constructor": "new(r: number, g: number, b: number)",
      "methods": []
    }
  },
  "globals": {
    "functions": [
      "print",
      "warn",
      "error",
      "require",
      "spawn",
      "delay",
      "wait",
      "tick",
      "time",
      "typeof",
      "type",
      "pcall",
      "xpcall",
      "assert",
      "collectgarbage",
      "getfenv",
      "setfenv",
      "getmetatable",
      "setmetatable",
      "rawequal",
      "rawget",
      "rawset",
      "select",
      "tonumber",
      "tostring",
      "unpack",
      "math.abs",
      "math.acos",
      "math.asin",
      "math.atan",
      "math.ceil",
      "math.cos",
      "math.deg",
      "math.exp",
      "math.floor",
      "math.fmod",
      "math.frexp",
      "math.ldexp",
      "math.log",
      "math.max",
      "math.min",
      "math.modf",
      "math.pow",
      "math.rad",
      "math.random",
      "math.randomseed",
      "math.sin",
      "math.sqrt",
      "math.tan",
      "string.byte",
      "string.char",
      "string.find",
      "string.format",
      "string.gmatch",
      "string.gsub",
      "string.len",
      "string.lower",
      "string.match",
      "string.rep",
      "string.reverse",
      "string.sub",
      "string.upper",
      "table.insert",
      "table.maxn",
      "table.remove",
      "table.sort"
    ]
  },
    "snippets": {
    "loadstring_rbx": "loadstring()",
    "loadstring_http_stellar": "loadstring(game:HttpGet(\"url\"))()"
  }
}
